version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: test-postgres
    environment:
      POSTGRES_DB: usersdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d usersdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  mysql:
    image: mysql:8
    container_name: test-mysql
    environment:
      MYSQL_DATABASE: usersdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
      MYSQL_ROOT_PASSWORD: rootpass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "testuser", "-ptestpass"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  oracle:
    image: gvenzl/oracle-free:23-slim
    container_name: test-oracle
    environment:
      ORACLE_PASSWORD: testpass
      APP_USER: testuser
      APP_USER_PASSWORD: testpass
    ports:
      - "1521:1521"
    volumes:
      - oracle-data:/opt/oracle/oradata
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - app-network

  app:
    build: .
    container_name: test-app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
      oracle:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - DATA_SOURCES[0]_URL=jdbc:postgresql://postgres:5432/usersdb
      - DATA_SOURCES[1]_URL=jdbc:mysql://mysql:3306/usersdb
      - DATA_SOURCES[2]_URL=jdbc:oracle:thin:@oracle:1521/FREEPDB1

volumes:
  postgres-data:
  mysql-data:
  oracle-data:

networks:
  app-network:
    driver: bridge
